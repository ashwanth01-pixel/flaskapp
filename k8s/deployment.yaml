# Updated by bot: Add a rolling update strategy to the deployment spec: strategy: {type: RollingUpdate, rollingUpdate: {maxSurge: 1, maxUnavailable: 0}}
# Updated by bot: Add a rolling update strategy to the deployment spec: strategy: {type: RollingUpdate, rollingUpdate: {maxSurge: 1, maxUnavailable: 0}}
# Updated by bot: Add a rolling update strategy to the deployment spec, e.g., strategy: {type: RollingUpdate, rollingUpdate: {maxSurge: 1, maxUnavailable: 0}}
# Updated by bot: Add a rolling update strategy to the deployment spec, e.g., strategy: {type: RollingUpdate, rollingUpdate: {maxSurge: 1, maxUnavailable: 0}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ashapp-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ashapp-backend
  template:
    metadata:
      labels:
        app: ashapp-backend
    spec:
      containers:
      - name: ashapp-backend
        image: ashwanth01/ashapp-backend:latest
        ports:
        - containerPort: 5000
        resources:
          limits:
            cpu: "500m"
            memory: "256Mi"
          requests:
            cpu: "250m"
            memory: "128Mi"
        readinessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 10
        imagePullPolicy: Always
        env:
        - name: FLASK_ENV
          value: "production"
        - name: PYTHONUNBUFFERED
          value: "1"

# Appended by bot: Add a rolling update strategy to the deployment spec, e.g., strategy: {type: RollingUpdate, rollingUpdate: {maxSurge: 1, maxUnavailable: 0}}

# Appended by bot: Add a rolling update strategy to the deployment spec, e.g., strategy: {type: RollingUpdate, rollingUpdate: {maxSurge: 1, maxUnavailable: 0}}

# Appended by bot: Add a rolling update strategy to the deployment spec, e.g., strategy: {type: RollingUpdate, rollingUpdate: {maxSurge: 1, maxUnavailable: 0}}
# Appended by bot: Add a rolling update strategy to the deployment spec: strategy: {type: RollingUpdate, rollingUpdate: {maxSurge: 1, maxUnavailable: 0}}
